#ifndef rust_wm_h
#define rust_wm_h

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdarg>
#include <cstdint>
#include <cstdlib>
#include <new>
#include <miral/window_specification.h>
#include <mir_toolkit/events/event.h>
#include <mir_toolkit/events/input/input_event.h>
#include <miral/window_manager_tools.h>
#include "fixes.h"

namespace rust {

struct Window;

struct WindowManager;

struct SharedPtrWindow {
  Window *0;
};

extern "C" {

void advise_delete_window(WindowManager *wm, const WindowInfo *window_info);

void advise_focus_gained(WindowManager *wm, const WindowInfo *window_info);

extern SharedPtrWindow get_active_window(const WindowManagerTools *value);

bool handle_keyboard_event(WindowManager *wm, const MirKeyboardEvent *event);

void handle_modify_window(WindowManager *wm,
                          const WindowInfo *_window_info,
                          const WindowSpecification *_modifications);

void handle_window_ready(WindowManager *wm, WindowInfo *window_info);

WindowManager *init_wm(WindowManagerTools *tools);

void place_new_window(WindowManager *wm, WindowSpecification *window_specification);

extern void rust_drop_window(SharedPtrWindow value);

extern Window *rust_get_window(SharedPtrWindow value);

extern void select_active_window(const WindowManagerTools *value, const Window *hont);

} // extern "C"

} // namespace rust

#endif // rust_wm_h
